const imgs = Array.from(document.getElementsByTagName('img'));
const markerWrapper = document.getElementById('markerWrapper');

const getDimens = (box) => `
	top: ${box.top - box.height}px;
	left: ${box.left - box.width}px;
	width: ${box.width}px;
	height: ${box.height}px;
`;

const markFace = (face) => {
	console.info(`Marking face | left: ${face.boundingBox.left}`);
	const marker = document.createElement('div');
	const attrs = {
		"class": "marker",
		"style": getDimens(face.boundingBox),
	};
	Object.keys(attrs)
		.forEach(attr => {
			marker.setAttribute(attr, attrs[attr])
		});
	markerWrapper.appendChild(marker);
};

// TODO: avoid instantiating for every face; store data in a var
const detectFaces = (image) => {
	if (window.FaceDetector == undefined) {
		// TODO: link to feature flag for chrome user agent
		console.error('Your browser does not support face detection');
		return;
	}
	
	const Detector = new FaceDetector();
	Detector.detect(image)
		.then(faces => {
			console.dir(faces);
			faces.forEach(markFace);
		});
	
};

// TODO async/await
imgs.forEach(img => {
	img.onload = detectFaces(img)
});
